import re
from pydantic import BaseModel, Field, field_validator
from typing import Any, Optional
from datetime import datetime

class Appointment(BaseModel):
    
    id: Optional[str] = Field(
        default=None,
        description="ID generated by MongoDB"
    )
    
    user_id: Optional[str] = Field(
        default=None,
        description="ID of the user"
    )
    
    date_creation: Optional[datetime] =Field(
        default_factory=datetime.utcnow, 
        description="Creation date of the appointment"
    )
    
    date_appointment: datetime = Field(
        description="Date and time of the appointment",
        examples=["2025-07-30T14:30:00"]
    )
    
    comment: str =Field(
        description="User commentaries about the order",
        pattern=r"^[A-Za-zÁÉÍÓÚÜÑáéíóúüñ' -]+$"
    )
    active: Optional[bool] = Field(
        description="The appointment is active?",
        default=True
    )
    
    @field_validator("date_appointment")
    @classmethod
    def validate_future_date(cls, v):
        if v < datetime.utcnow():
            raise ValueError("The appointment date can't be in the past")
        return v
    
    
class StandardResponse(BaseModel):
    success: bool
    message: str
    data: Optional[Any] = None    